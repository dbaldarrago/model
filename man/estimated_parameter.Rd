% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimated_parameter.R
\name{estimated_parameter}
\alias{estimated_parameter}
\title{Estimated parameters.}
\usage{
estimated_parameter(mod, fun = "mean", m = 100)
}
\arguments{
\item{mod}{a gamlss object.}

\item{fun}{the estimated parameter, by default is mean but can be change for sd or var.}

\item{m}{a number to indicate the number of observations to simulate, by default its values is 100.}
}
\value{
\code{estimated_parameter} function returns a vector.
}
\description{
This function estimates parameters like mean, standard deviation for a gamlss object. This function is very useful when the mean or standard deviation do not match with mu, sigma or some function of mu and/or sigma.
}
\details{
The function obtains the fitted values for mu, sigma, nu and tau. The functions simulates m observations and then it obtains the mean/fun defined by the user.
}
\examples{
# Example for NOrmal regression ------------------------
n <- 50
x <- runif(n=n)
y <- rnorm(n=n, mean=-5 + 10 * x, sd=exp(1 + 2 * x))
library(gamlss)
mod <- gamlss(y ~ x, sigma.fo=~x, family=NO)
# To explore the coefficients
coef(mod, "mu")
coef(mod, "sigma")

# Obtaining the means
m1 <- fitted(mod, what="mu")
m2 <- estimated_parameter(mod, m=10000, fun="mean")
# Obtaining the standard deviations
s1 <- fitted(mod, what="sigma")
s2 <- estimated_parameter(mod, m=10000, fun="sd")

# Comparing the estimated means
cor(m1, m2)
# Comparing the estimated standard deviations
cor(s1, s2)

# Example for GAmma regression --------------------------
n <- 50
x <- runif(n=n)
y <- rGA(n=n, mu=exp(-5 + 10 * x), sigma=exp(-1 + 2 * x))
mod <- gamlss(y ~ x, sigma.fo=~x, family=GA)
# To explore the coefficients
coef(mod, "mu")
coef(mod, "sigma")

# Obtaining the means
m1 <- fitted(mod, what="mu")
m2 <- estimated_parameter(mod, m=10000, fun="mean")
# Obtaining the standard deviations
s1 <- fitted(mod, what="sigma")
s2 <- estimated_parameter(mod, m=10000, fun="sd")

# Comparing the estimated means
cor(m1, m2)
# Comparing the estimated standard deviations
# in GA parameterization standard devition = mu * sigma
cor(s1*m1, s2)

}
